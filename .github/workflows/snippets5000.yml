# This is a basic workflow to help you get started with Actions
name: Snippets 5000

# Controls when the action will run. Triggers the workflow on push or pull request
# events on the main branch only.
on:
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]
  workflow_dispatch:
    inputs:
      reason:
        description: "The reason for running the workflow"
        required: true
        default: "Manual run"

env:
  DOTNET_VERSION: '9.0.x' # set this to the dot net version to use
  EnableNuGetPackageRestore: "True"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
permissions:
  contents: read

jobs:
  # This workflow contains a single job called "snippets-build"
  snippets-build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    permissions:
      statuses: write

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Harden Runner
        uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
        with:
          egress-policy: audit

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      # Get the latest preview SDK (or sdk not installed by the runner)
      - name: Setup .NET
        uses: actions/setup-dotnet@67a3573c9a986a3f9c594539f4ab511d57bb3ce9 # main
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      # Print dotnet info
      - name: Display .NET info
        run: |
          dotnet --info

      # Clone docs tools repo
      - name: Clone docs-tools repository
        run: |
          git clone https://github.com/dotnet/docs-tools

      # Run snippets 5000
      - name: Run snippets 5000 for PR
        env:
          GitHubKey: ${{ secrets.GITHUB_TOKEN }}
        run: |
          dotnet run --project docs-tools/snippets5000/Snippets5000/Snippets5000.csproj -- --sourcepath "${{ github.workspace }}" --pullrequest ${{ github.event.number }} --owner ${{ github.repository_owner }} --repo ${{ github.event.repository.name }}

      # Update build output json file
      - name: Upload build results
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 #@v4.6.2
        with:
          name: build
          path: ./output.json
