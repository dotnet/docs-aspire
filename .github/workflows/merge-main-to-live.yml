name: go-live

on:
  workflow_dispatch:
    inputs:
      reason:
        description: "The reason for running the workflow"
        required: true
        default: "Need to update live now, before daily scheduled run."
  schedule:
    # Run at midnight every day
    - cron: "0 0 * * *"

jobs:
  go-live:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: "Print manual run reason"
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: |
          echo 'Reason: ${{ github.event.inputs.reason }}'

      - name: Create pull request
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea
        with:
          retries: 3
          script: |
            // Get the owner and repo from the context
            const { owner, repo } = context.repo;

            // Get the SHA of the latest commit on the main branch
            const compare = await github.rest.repos.compareCommitsWithBasehead({
                owner,
                repo,
                basehead: 'live...main',
            });

            core.startGroup('Resulting comparison');
            core.info(JSON.stringify(compare, null, 2));
            core.endGroup();

            // Only create a pull request if there are changes in main, not in live.
            if (compare.data.status === 'identical') {
                core.info('No changes in main, not creating a pull request.');
                return;
            } else {
                core.info('Changes in main, creating a pull request.');
            }

            // Create a pull request from main to live
            try {
              await github.rest.pulls.create({
                  owner,
                  repo,
                  head: 'main',
                  base: 'live',
                  title: 'âœ… Merge `main` into `live`',
                  body: 'ðŸ¤– Queue merge when ready...',
              });
            } catch (error) {
              if (error.status === 422 && error.message.includes('No commits between live and main')) {
                core.warning('No commits between live and main');
                return;
              } else {
                throw error;
              }
            }
